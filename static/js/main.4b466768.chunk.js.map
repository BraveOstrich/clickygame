{"version":3,"sources":["components/CharacterCard/index.js","components/Wrapper/index.js","components/Nav/index.js","App.js","index.js"],"names":["CharacterCard","props","react_default","a","createElement","className","value","id","onClick","handleClick","alt","name","src","image","Wrapper","children","Navbar","App","state","friends","score","clicked","_this","indexOf","handleIncrement","setState","concat","handleReset","newScore","console","log","Object","assertThisInitialized","handleShuffle","shuffledFriends","array","i","length","j","Math","floor","random","_ref","randomFriends","_this2","this","components_Wrapper","Nav","map","friend","components_CharacterCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"+0EAoBeA,MAdb,SAAuBC,GACrB,OACMC,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVC,MAAOL,EAAMM,GACbC,QAAS,kBAAMP,EAAMQ,YAAYR,EAAMM,MAEvCL,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQK,IAAKT,EAAMU,KAAMC,IAAKX,EAAMY,iBCPpDC,MAJf,SAAiBb,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,iBCY1BC,MAbf,SAAgBf,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mCACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,mDACAH,EAAAC,EAAAC,cAAA,kCCkEGa,6MAzDbC,MAAQ,CACNC,UACAC,MAAO,EACPC,QAAS,MAGXZ,YAAc,SAAAF,IAC4B,IAApCe,EAAKJ,MAAMG,QAAQE,QAAQhB,IAC7Be,EAAKE,kBACLF,EAAKG,SAAS,CAAEJ,QAASC,EAAKJ,MAAMG,QAAQK,OAAOnB,MAEnDe,EAAKK,iBAITH,gBAAkB,WAChB,IAAMI,EAAWN,EAAKJ,MAAME,MAAQ,EACpCS,QAAQC,IAARC,OAAAC,EAAA,EAAAD,CAAAT,IACAA,EAAKG,SAAS,CACZL,MAAOQ,IAETN,EAAKW,mBAGPN,YAAc,WACZL,EAAKG,SAAS,CACZJ,QAAS,KAEXC,EAAKW,mBAGPA,cAAgB,WACd,IAAIC,EA3CR,SAAuBC,GACrB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADCM,EAElB,CAACP,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkCM,EAAA,GAE9BP,EAAMG,GAFwBI,EAAA,GAI3C,OAAOP,EAsCiBQ,CAAcxB,GACpCG,EAAKG,SAAS,CAAEN,QAASe,6EAInB,IAAAU,EAAAC,KACN,OACE3C,EAAAC,EAAAC,cAAC0C,EAAD,CAASzC,UAAU,WACjBH,EAAAC,EAAAC,cAAC2C,EAAD,MACCF,KAAK3B,MAAMC,QAAQ6B,IAAI,SAAAC,GAAM,OAC5B/C,EAAAC,EAAAC,cAAC8C,EAAD,CACE3C,GAAI0C,EAAO1C,GACXE,YAAamC,EAAKnC,YAClBe,gBAAiBoB,EAAKpB,gBACtBG,YAAaiB,EAAKjB,YAClBM,cAAeW,EAAKX,cACpBkB,IAAKF,EAAO1C,GACZM,MAAOoC,EAAOpC,kBAnDRuC,aCXlBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4b466768.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n//var Shuffle = require(\"react-shuffle\");\n\n\n\n  function CharacterCard(props) {\n    return (\n          <div \n            className=\"card\" \n            value={props.id} \n            onClick={() => props.handleClick(props.id)}\n          >\n            <span>\n                <img className=\"image\" alt={props.name} src={props.image}/>\n            </span>\n          </div>\n    )\n  }\n\nexport default CharacterCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            <h1>Clicky Game!</h1>\n            <p className=\"lead\">Click an Image to Score Points.</p>\n            <br />\n            <p className=\"lead\">Don't Click an Image You Have Already Selected.</p>\n            <h3>Score: </h3>\n        </nav>\n    )\n}\n\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Wrapper from \"./components/Wrapper\";\n//import Title from \"./components/Title\";\nimport Navbar from \"./components/Nav\";\nimport friends from \"./friends.json\";\n\n\nfunction randomFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\n\nclass App extends Component {\n\n  state = {\n    friends,\n    score: 0,\n    clicked: [],\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.score + 1;\n    console.log(this)\n    this.setState({\n      score: newScore\n    });\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledFriends = randomFriends(friends);\n    this.setState({ friends: shuffledFriends });\n  };\n\n\n  render(){\n    return (\n      <Wrapper className=\"wrapper\">\n        <Navbar />\n        {this.state.friends.map(friend => (\n          <CharacterCard\n            id={friend.id}\n            handleClick={this.handleClick}\n            handleIncrement={this.handleIncrement}\n            handleReset={this.handleReset}\n            handleShuffle={this.handleShuffle}\n            key={friend.id}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}